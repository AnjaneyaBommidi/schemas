title: JSON Schema
description: >-
  A JSON Schema object, which allows the user to define any data type, including primitives, objects,
  arrays, enumerations, etc.  They can also use "allOf", "anyOf", "oneOf", and "not" to create
  derived types, compound types, etc.
type: object

properties:
  id:
    type: string
    format: uri
    minLength: 0
  $schema:
    type: string
    format: uri
    minLength: 0
  title:
    type: string
    minLength: 0
  description:
    type: string
    minLength: 0
  type:
    anyOf:
      - $ref: "#/definitions/TypeName"
      - type: array
        items:
          $ref: "#/definitions/TypeName"
        minItems: 1
        uniqueItems: true
  default:
    $ref: "#/definitions/AnyType"
  minimum:
    type: number
  maximum:
    type: number
  exclusiveMinimum:
    type: boolean
    default: false
  exclusiveMaximum:
    type: boolean
    default: false
  multipleOf:
    type: number
    minimum: 0
    exclusiveMinimum: true
  maxLength:
    $ref: "#/definitions/PositiveInteger"
  minLength:
    $ref: "#/definitions/PositiveIntegerDefault0"
  pattern:
    type: string
    format: regex
  enum:
    type: array
    items:
      $ref: "#/definitions/AnyType"
    minItems: 1
    uniqueItems: true
  items:
    anyOf:
      - $ref: "#"
      - $ref: "#/definitions/SchemaArray"
    default: {}
  additionalItems:
    anyOf:
      - type: boolean
      - $ref: "#"
    default: {}
  maxItems:
    $ref: "#/definitions/PositiveInteger"
  minItems:
    $ref: "#/definitions/PositiveIntegerDefault0"
  uniqueItems:
    type: boolean
    default: false
  maxProperties:
    $ref: "#/definitions/PositiveInteger"
  minProperties:
    $ref: "#/definitions/PositiveIntegerDefault0"
  required:
    $ref: "#/definitions/StringArray"
  properties:
    $ref: "#/definitions/Object"
  patternProperties:
    $ref: "#/definitions/Object"
  additionalProperties:
    anyOf:
      - type: boolean
      - $ref: "#"
    default: {}
  definitions:
    $ref: "#/definitions/Object"
  dependencies:
    type: object
    patternProperties:
      ".*":
        anyOf:
          - $ref: "#"
          - $ref: "#/definitions/StringArray"
  allOf:
    $ref: "#/definitions/SchemaArray"
  anyOf:
    $ref: "#/definitions/SchemaArray"
  oneOf:
    $ref: "#/definitions/SchemaArray"
  not:
    $ref: "#"
patternProperties:
  "^_":
    $ref: "#/definitions/AnyType"
additionalProperties: false

dependencies:
    exclusiveMaximum: [ maximum ]
    exclusiveMinimum: [ minimum ]
default: {}

definitions:
  SchemaArray:
    type: array
    minItems: 1
    items:
      $ref: "#"

  PositiveInteger:
    type: integer
    minimum: 0

  PositiveIntegerDefault0:
    type: integer
    minimum: 0
    default: 0

  TypeName:
    type: string
    enum: ["array", "boolean", "integer", "null", "number", "object", "string"]

  StringArray:
    type: array
    items:
      type: string
      minLength: 0
    minItems: 1
    uniqueItems: true

  Object:
    type: object
    patternProperties:
      ".*":
        $ref: "#"
    additionalProperties:
      $ref: "#"
    default: {}

  AnyType:
    type: ["array", "boolean", "integer", "null", "number", "object", "string"]

    # for numbers
    minimum: 5.e-324

    # for strings
    minLength: 0

    # for objects
    additionalProperties: true
    patternProperties:
      ".*":
        $ref: "#/definitions/AnyType"

    # for arrays
    items:
      $ref: "#/definitions/AnyType"
    minItems: 0
    additionalItems: true
