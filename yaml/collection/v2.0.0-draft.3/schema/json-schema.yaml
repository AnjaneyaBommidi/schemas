title: JSON Schema
description: >-
  A full JSON Schema, which allows the user to define any data type, including primitives, objects,
  arrays, enumerations, etc.  They can also use "allOf", "anyOf", "oneOf", and "not" to create
  derived types, compound types, etc.
type: object

properties:
  id:
    type: string
    format: uri
    minLength: 0
  $schema:
    type: string
    format: uri
    minLength: 0
  title:
    type: string
    minLength: 0
  description:
    type: string
    minLength: 0
  type:
    anyOf:
      - $ref: types.yaml#/definitions/TypeName
      - type: array
        items:
          $ref: types.yaml#/definitions/TypeName
        minItems: 1
        uniqueItems: true
  default:
    $ref: ../types.yaml#/definitions/AnyType
  minimum:
    type: number
  maximum:
    type: number
  exclusiveMinimum:
    type: boolean
    default: false
  exclusiveMaximum:
    type: boolean
    default: false
  multipleOf:
    type: number
    minimum: 0
    exclusiveMinimum: true
  maxLength:
    $ref: ../types.yaml#/definitions/PositiveInteger
  minLength:
    $ref: ../types.yaml#/definitions/PositiveIntegerDefault0
  pattern:
    type: string
    format: regex
  enum:
    type: array
    items:
      $ref: ../types.yaml#/definitions/AnyType
    minItems: 1
    uniqueItems: true
  items:
    anyOf:
      - $ref: "#"
      - $ref: types.yaml#/definitions/SchemaArray
    default: {}
  additionalItems:
    anyOf:
      - type: boolean
      - $ref: "#"
    default: {}
  maxItems:
    $ref: ../types.yaml#/definitions/PositiveInteger
  minItems:
    $ref: ../types.yaml#/definitions/PositiveIntegerDefault0
  uniqueItems:
    type: boolean
    default: false
  maxProperties:
    $ref: ../types.yaml#/definitions/PositiveInteger
  minProperties:
    $ref: ../types.yaml#/definitions/PositiveIntegerDefault0
  required:
    $ref: ../types.yaml#/definitions/StringArray
  properties:
    $ref: types.yaml#/definitions/SchemaMap
  patternProperties:
    $ref: types.yaml#/definitions/SchemaMap
  additionalProperties:
    anyOf:
      - type: boolean
      - $ref: "#"
    default: {}
  definitions:
    $ref: types.yaml#/definitions/SchemaMap
  dependencies:
    type: object
    patternProperties:
      ".*":
        anyOf:
          - $ref: "#"
          - $ref: ../types.yaml#/definitions/StringArray
  allOf:
    $ref: types.yaml#/definitions/SchemaArray
  anyOf:
    $ref: types.yaml#/definitions/SchemaArray
  oneOf:
    $ref: types.yaml#/definitions/SchemaArray
  not:
    $ref: "#"
patternProperties:
  "^_":
    $ref: ../types.yaml#/definitions/AnyType
additionalProperties: false

dependencies:
    exclusiveMaximum: [ maximum ]
    exclusiveMinimum: [ minimum ]
default: {}
